:root {
    --cor1: #f06adb;
    --cor2: #c24ff0;
    --cor3: #ffd893;
    --cor4: #292929;
    --cor5: #7c7a7d;
    --cor6: #2E2E2E;
    --cor7: #ffffff;
    --cor9: #10041D;
    --efeito-degrade-texto: 
    linear-gradient(-45deg, #ff1e56, #6a11cb, #fc25f1);

    --font-family-roboto: "Roboto", sans-serif;
    --font-family-quik: "Quicksand", sans-serif;
    --font-family-mono: "Roboto Mono", monospace;
    --font-family-codec: "Source Code Pro", serif;
}

/* OTIMIZAÇÃO: Definindo a animação uma única vez para ser reutilizada */
@keyframes moverDegrade {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}


@media (max-width:480px){
.interface {
    width: 350px;
    margin: 0 auto;
    /* OTIMIZAÇÃO: Removidas propriedades desnecessárias como position, display, etc., 
       assumindo que o fluxo normal do documento já centraliza o conteúdo. */
}

/* MENU */
.menu-mobile {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 325px;
    height: 35px;
    border-radius: 11px;
    background: rgba(145, 145, 145, 0.21);
    backdrop-filter: blur(6px); /* Manter o blur aqui é aceitável, pois é um elemento pequeno e fixo */
    position: fixed;
    top: 5px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
}

.menu-mobile ul {
    display: flex;
    gap: 15px;
    list-style: none;
    margin: 0;
    padding: 0;
}

.menu-mobile ul li {
    /* OTIMIZAÇÃO: Movida a transição para o elemento filho (a) se for o caso, 
       mas aqui no li está ok. Sendo mais específico na transição. */
    transition: transform 0.3s ease-in-out;
}

.menu-mobile ul li a {
    display: flex;
    align-items: center;
    gap: 5px;
    text-decoration: none;
    color: white;
    font-family: var(--font-family-quik);
    font-size: 0.8rem;
    font-weight: 400;
}

/* Efeito de zoom ao clicar/passar o mouse */
.menu-mobile ul li:hover {
    transform: scale(1.2);
}

.icon-mobile {
    width: 15px;
    height: auto;
}

/* MAIN */
/* ... (sem grandes mudanças aqui, a estrutura está boa) ... */

/* Efeito de digitação */
#typing-effect {
    font-family: var(--font-family-mono);
    font-size: 1rem;
    color: var(--cor5);
}

.cursor {
    display: inline-block;
    width: 2px;
    height: 24px;
    background-color: var(--cor4);
    /* OTIMIZAÇÃO: Animações de opacidade são muito performáticas. Mantenha! */
    animation: blink 1s infinite;
    vertical-align: middle;
}

@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
}


/* SETA MAIN */
.seta-main {
    margin-top: 40px;
    /* OTIMIZAÇÃO: Animar 'transform' é excelente para performance. 
       Adicionado 'will-change' para dar uma dica extra ao navegador. */
    animation: float 3s ease-in-out infinite;
    will-change: transform;
}

@keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); } /* OTIMIZAÇÃO: Reduzi um pouco a distância para um movimento mais sutil */
}

.habilidades {
    display: flex;
    flex-direction: column;
    gap: 50px;
    margin-top: 50px;
}

.front-end, .ui-ux, .design {
    display: flex;
    width: 70vw;
    height: 80vw;
    padding: 10px 18px;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 3px;
    background: rgba(255, 255, 255, 0.12);
    border-radius: 16px;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(5px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    cursor: pointer;
    position: relative;
    overflow: hidden; /* Necessário para o efeito de brilho com pseudo-elemento */
    
    /* OTIMIZAÇÃO: Seja específico nas transições e adicione will-change. */
    transition: transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out;
    will-change: transform;
}

.front-end:hover, .ui-ux:hover, .design:hover {
    transform: translateY(-8px);
    /* OTIMIZAÇÃO: A sombra no hover é mantida, mas esteja ciente que ela é custosa. 
       Se o lag persistir, considere remover a mudança da sombra no hover. */
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
}

/* OTIMIZAÇÃO: Este efeito de brilho com `left` é melhor que animar um gradiente, mas ainda pode ser otimizado.
   Uma abordagem ainda melhor seria animar o transform do pseudo-elemento. */
.front-end::before, .ui-ux::before, .design::before {
    content: '';
    position: absolute;
    top: 0;
    left: -150%;
    width: 80%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transform: skewX(-25deg);
    transition: left 0.7s ease-in-out;
}

.front-end:hover::before, .ui-ux:hover::before, .design:hover::before {
    left: 150%;
}


.front-end h1, .design h1, .ui-ux h1 {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 600;
    font-family: var(--font-family-quik);
    background: var(--efeito-degrade-texto);
    background-size: 200% 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    /* AVISO: A animação de gradiente em texto é pesada. 
       Se o lag persistir, remova a linha 'animation' abaixo. */
    animation: moverDegrade 4s infinite linear;
}


/* PROJETOS */
/* ... (sem grandes mudanças aqui, o slider já usa transform, que é bom) ... */

.slides-1, .slides-2 {
    display: flex;
    height: 100%;
    /* OTIMIZAÇÃO: 'transform' é ótimo para sliders. */
    transition: transform 0.5s ease-in-out;
}

.slides-1 img, .slides-2 img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    flex-shrink: 0;
    padding: 20px;
}

/* SOBRE MIM */
.sobre-mim-tilulo, .titulo {
    font-size: 1.8rem;
    font-weight: bold;
    text-transform: uppercase;
    background: linear-gradient(-45deg, #ff1e56, #6a11cb, #fc25f1);
    background-size: 300% 300%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-family: var(--font-family-quik);
    text-align: center;
    /* AVISO: Animação de gradiente é pesada. Se houver lag, remova a linha abaixo. */
    animation: moverDegrade 3s infinite linear;
}

.img-topo {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20rem;
    height: 30vh;
}

.container-bolha {
    position: absolute;
    width: 150px;
    height: 150px;
}

.bolha {
    position: relative;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #b919f7, #f905df, #f90595);
    border-radius: 50%; /* OTIMIZAÇÃO: Removida a animação de border-radius */
    background-size: 300%;
    /* OTIMIZAÇÃO: A animação 'animacaoBolha' que mudava o border-radius foi removida.
       Mantive apenas a animação de rotação (transform) e do gradiente (que é pesada mas central para o efeito).
       O 'filter: blur' é o maior vilão aqui. A melhor otimização seria usar uma imagem PNG já com blur. */
    animation: animacaoBolhaSimples 20s ease-in-out infinite, deslocamentoGradiente 15s linear infinite;
    filter: blur(25px); /* AVISO: Esta linha é EXTREMAMENTE PESADA para a performance. */
}

/* OTIMIZAÇÃO: Uma animação muito mais simples usando apenas transform. */
@keyframes animacaoBolhaSimples {
    0%, 100% {
        transform: scale(1) rotate(0deg);
    }
    50% {
        transform: scale(1.1) rotate(180deg);
    }
}

@keyframes deslocamentoGradiente {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.foto-viviene {
    position: absolute;
    z-index: 1;
    width: 35%;
    height: auto;
}

/* ... (O resto do CSS de tecnologias e formulário parece ok, 
   as animações de card usam transform e opacity, o que é ótimo!) ... */

/* Card Animation */
.tech-card {
    /* OTIMIZAÇÃO: Excelente uso de transform e opacity para a animação. Mantenha assim! */
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
    transition: transform 0.3s ease, opacity 0.3s ease;
    will-change: transform, opacity;
    z-index: 1000;
    /* ... outros estilos ... */
}

.tech-card.active {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
}

/* FORMULÁRIO */
#container-formulario {
    /* OTIMIZAÇÃO: A animação 'reflexoEspelho' usa transform e opacity, o que é bom! */
    position: relative;
    /* ... */
    overflow: hidden;
}

/* ... O resto do seu CSS está bem estruturado ... */
}